/*
 * Copyright 2012 Freescale Semiconductor, Inc.
 * Copyright 2011 Linaro Ltd.
 *
 * The code contained herein is licensed under the GNU General Public
 * License. You may obtain a copy of the GNU General Public License
 * Version 2 or later at the following locations:
 *
 * http://www.opensource.org/licenses/gpl-license.html
 * http://www.gnu.org/copyleft/gpl.html
 */

#include <dt-bindings/input/input.h>

/ {
	aliases {
		mxcfb0 = &mxcfb1;
		mxcfb1 = &mxcfb2;
		mxcfb2 = &mxcfb3;
		mxcfb3 = &mxcfb4;
	};

	memory {
		reg = <0x10000000 0x40000000>;
	};

	regulators {
		compatible = "simple-bus";
		#address-cells = <1>;
		#size-cells = <0>;

		reg_usb_otg_vbus: regulator@0 {
			compatible = "regulator-fixed";
			reg = <0>;
			regulator-name = "usb_otg_vbus";
			regulator-min-microvolt = <5000000>;
			regulator-max-microvolt = <5000000>;
			gpio = <&gpio3 22 0>;
			enable-active-high;
		};

		reg_usb_h1_vbus: regulator@1 {
			compatible = "regulator-fixed";
			reg = <1>;
			regulator-name = "usb_h1_vbus";
			regulator-min-microvolt = <5000000>;
			regulator-max-microvolt = <5000000>;
			gpio = <&gpio1 29 0>;
			enable-active-high;
		};

		reg_2p5v: regulator@2 {
			compatible = "regulator-fixed";
			reg = <2>;			
			regulator-name = "2P5V";
			regulator-min-microvolt = <2500000>;
			regulator-max-microvolt = <2500000>;
			regulator-always-on;
		};

		reg_3p3v: regulator@3 {
			compatible = "regulator-fixed";
			reg = <3>;
			regulator-name = "3P3V";
			regulator-min-microvolt = <3300000>;
			regulator-max-microvolt = <3300000>;
			regulator-always-on;
		};
	};

	gpio-keys {
		compatible = "gpio-keys";
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_gpio_keys>;

		power {
			label = "Power Button";
			gpios = <&gpio3 29 1>;
			gpio-key,wakeup;
			linux,code = <KEY_POWER>;
		};
	};

	sound {
		compatible = "fsl,imx6q-maxle-sgtl5000",
					 "fsl,imx-audio-sgtl5000";
		model = "imx6q-maxle-sgtl5000";
  		cpu-dai = <&ssi2>; 
		audio-codec = <&codec>;
		audio-routing =
			"MIC_IN", "Mic Jack",
			"Mic Jack", "Mic Bias",
			"Headphone Jack", "HP_OUT";
		mux-int-port = <2>;
		mux-ext-port = <3>;
	};


	sound-hdmi {
		compatible = "fsl,imx6q-audio-hdmi",
			     "fsl,imx-audio-hdmi";
		model = "imx-audio-hdmi";
		hdmi-controller = <&hdmi_audio>;
	};

	mxcfb1: fb@0 {
		compatible = "fsl,mxc_sdc_fb";
		disp_dev = "ldb";
		interface_pix_fmt = "RGB666";
		default_bpp = <16>;
		int_clk = <0>;
		late_init = <0>;
		status = "disabled";
	};

	mxcfb2: fb@1 {
		compatible = "fsl,mxc_sdc_fb";
		disp_dev = "hdmi";
		interface_pix_fmt = "RGB24";
		mode_str ="1920x1080M@60";
		default_bpp = <24>;
		int_clk = <0>;
		late_init = <0>;
		status = "disabled";
	};

	mxcfb3: fb@3 {
		compatible = "fsl,mxc_sdc_fb";
		disp_dev = "ldb";
		interface_pix_fmt = "RGB666";
		mode_str ="LDB-XGA"; 
		default_bpp = <16>;
		int_clk = <0>;
		late_init = <0>;
		status = "disabled";
	};

	mxcfb4: fb@3 {
		compatible = "fsl,mxc_sdc_fb";
		disp_dev = "ldb";
		interface_pix_fmt = "RGB666";
		mode_str ="LDB-XGA";
		default_bpp = <16>;
		int_clk = <0>;
		late_init = <0>;
		status = "disabled";
	};

	backlight {
		compatible = "pwm-backlight";
		pwms = <&pwm1 0 5000000>;
		brightness-levels = <0 4 8 16 32 64 128 255>;
		default-brightness-level = <7>;
		status = "okay";   // fehlt bei maxle-alt
		enable-gpios = <&gpio1 4 GPIO_ACTIVE_HIGH>;   //maxles display board
	};

/* maxle: removed for test
	v4l2_cap_0 {
		compatible = "fsl,imx6q-v4l2-capture";
		ipu_id = <0>;
		csi_id = <0>;
		mclk_source = <0>;
		status = "okay";
	};

	v4l2_cap_1 {
		compatible = "fsl,imx6q-v4l2-capture";
		ipu_id = <0>;
		csi_id = <1>;
		mclk_source = <0>;
		status = "okay";
	};
*/
	v4l2_out {
		compatible = "fsl,mxc_v4l2_output";
		status = "okay";
	};

/* maxle: removed
	mipi_dsi_reset: mipi-dsi-reset {
		compatible = "gpio-reset";
		reset-gpios = <&gpio6 11 GPIO_ACTIVE_LOW>;
		reset-delay-us = <50>;
		#reset-cells = <0>;
	};
*/
};

&audmux {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_audmux>;
	status = "okay";
};

&cpu0 {
	arm-supply = <&sw1a_reg>;
	soc-supply = <&sw1c_reg>;
};

&ecspi1 {
	fsl,spi-num-chipselects = <1>;
	cs-gpios = <&gpio4 9 0>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_ecspi1>;
	status = "okay";
};


&ecspi3 {
	fsl,spi-num-chipselects = <1>;
	cs-gpios = <&gpio4 24 0>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_ecspi3>;
	status = "okay";

	flash: m25p80@0 {
		#address-cells = <1>;
		#size-cells = <1>;
		compatible = "st,m25p32";
		spi-max-frequency = <20000000>;
		reg = <0>;
		
		partition@0 {
			label = "U-Boot";
			reg = <0x0 0xC0000>;
			//read-only;
		};
		partition@C0000 {
			label = "env";
			reg = <0xc0000 0x10000>;
			//read-only;
		};
		partition@D0000 {
			label = "Kernel";
			reg = <0xd0000 0x320000>;
		};
		partition@3F0000 {
			label = "bdinfo";
			reg = <0x3f0000 0x10000>;
			//read-only;
		};

	};
};


&fec {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_enet>;
	phy-mode = "rgmii";
	phy-reset-duration = <10>;
#if 0
	/* In 3.10.17, reset is not well supported by software! Don'use it. */ 
	phy-reset-gpios = <&gpio1 25 0>;  /* reset bei maxle (muss auskommentiert sein */
#endif
	//mac-address = [00 01 02 03 04 05];   //wird von uboot gefuellt, wenn vorhanden
	local-mac-address = [00 17 53 00 00 01]; //wird normalerweise von uboot erzeugt
//	fsl,magic-packet;   // that's new, for now, don't use
	status = "okay";
};

&i2c1 {
	clock-frequency = <100000>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_i2c1>; 
	status = "okay";

	evervision: touch@38 {
		compatible = "kws,evervision_ts";
		reg = <0x38>;
		interrupt-parent = <&gpio6>;
		interrupts = <7 2>;  /* org 0 statt 2 ?*/
		status = "okay";
	}; 
 
	codec: sgtl5000@0a {
		compatible = "fsl,sgtl5000";
		reg = <0x0a>;
		clocks = <&clks 201>;
		VDDA-supply = <&reg_2p5v>;
		VDDIO-supply = <&reg_3p3v>;
	};
};

&i2c2 {
	clock-frequency = <100000>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_i2c2>;
	status = "okay";

	pmic: pfuze100@08 {
		compatible = "fsl,pfuze100";
		reg = <0x08>;

		regulators {
			sw1a_reg: sw1ab {
				regulator-min-microvolt = <300000>;
				regulator-max-microvolt = <1875000>;
				regulator-boot-on;
				regulator-always-on;
				regulator-ramp-delay = <6250>;
			};

			sw1c_reg: sw1c {
				regulator-min-microvolt = <300000>;
				regulator-max-microvolt = <1875000>;
				regulator-boot-on;
				regulator-always-on;
				regulator-ramp-delay = <6250>;
			};

			sw2_reg: sw2 {
				regulator-min-microvolt = <800000>;
				regulator-max-microvolt = <3300000>;
				regulator-boot-on;
				regulator-always-on;
			};

			sw3a_reg: sw3a {
				regulator-min-microvolt = <400000>;
				regulator-max-microvolt = <1975000>;
				regulator-boot-on;
				regulator-always-on;
			};

			sw3b_reg: sw3b {
				regulator-min-microvolt = <400000>;
				regulator-max-microvolt = <1975000>;
				regulator-boot-on;
				regulator-always-on;
			};

			sw4_reg: sw4 {
				regulator-min-microvolt = <800000>;
				regulator-max-microvolt = <3300000>;
			};

			swbst_reg: swbst {
				regulator-min-microvolt = <5000000>;
				regulator-max-microvolt = <5150000>;
			};

			snvs_reg: vsnvs {
				regulator-min-microvolt = <1000000>;
				regulator-max-microvolt = <3000000>;
				regulator-boot-on;
				regulator-always-on;
			};

			vref_reg: vrefddr {
				regulator-boot-on;
				regulator-always-on;
			};

			vgen1_reg: vgen1 {
				regulator-min-microvolt = <800000>;
				regulator-max-microvolt = <1550000>;
 				regulator-always-on; 
			};

			vgen2_reg: vgen2 {
				regulator-min-microvolt = <800000>;
				regulator-max-microvolt = <1550000>;
 				regulator-always-on;
			};

			vgen3_reg: vgen3 {
				regulator-min-microvolt = <1800000>;
				regulator-max-microvolt = <3300000>;
				regulator-always-on;
			};

			vgen4_reg: vgen4 {
				regulator-min-microvolt = <1800000>;
				regulator-max-microvolt = <3300000>;
				regulator-always-on;
			};

			vgen5_reg: vgen5 {
				regulator-min-microvolt = <1800000>;
				regulator-max-microvolt = <3300000>;
				regulator-always-on;
			};

			vgen6_reg: vgen6 {
				regulator-min-microvolt = <1800000>;
				regulator-max-microvolt = <3300000>;
				regulator-always-on;
			};
		};
	};

};

&i2c3 {
	clock-frequency = <100000>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_i2c3>; 
	status = "okay";

	hdmi: edid@50 {
		compatible = "fsl,imx6-hdmi-i2c";
		reg = <0x50>;
	};
 
 	ar1020@4D {
		compatible = "micro,ar1020_i2c";
		reg = <0x4D>;
		interrupt-parent = <&gpio3>;
		interrupts = <26 2>;
		status = "okay";
	};
};

&iomuxc {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_hog>;

	imx6qdl-maxle {
		pinctrl_hog: hoggrp {
			fsl,pins = <
				MX6QDL_PAD_NANDF_D0__GPIO2_IO00	 0x80000000
				MX6QDL_PAD_NANDF_D1__GPIO2_IO01	 0x80000000
				MX6QDL_PAD_NANDF_D2__GPIO2_IO02	 0x80000000
				MX6QDL_PAD_NANDF_D3__GPIO2_IO03	 0x80000000
				MX6QDL_PAD_NANDF_ALE__GPIO6_IO08 0x80000000
				MX6QDL_PAD_NANDF_CLE__GPIO6_IO07 0x80000000
				MX6QDL_PAD_GPIO_0__CCM_CLKO1     0x130b0
				MX6QDL_PAD_NANDF_CS2__GPIO6_IO15 0x80000000
				MX6QDL_PAD_NANDF_CS3__GPIO6_IO16 0x80000000
				MX6QDL_PAD_EIM_D26__GPIO3_IO26   0x80000000
				MX6QDL_PAD_EIM_CS1__GPIO2_IO24   0x80000000
				MX6QDL_PAD_ENET_RXD0__GPIO1_IO27 0x80000000
				MX6QDL_PAD_EIM_A25__GPIO5_IO02   0x80000000
				MX6QDL_PAD_EIM_D23__GPIO3_IO23   0x80000000
				MX6QDL_PAD_ENET_TXD1__GPIO1_IO29 0x80000000
				MX6QDL_PAD_EIM_D22__GPIO3_IO22   0x80000000
				MX6QDL_PAD_NANDF_CS0__GPIO6_IO11 0x80000000
				MX6QDL_PAD_NANDF_CS1__GPIO6_IO14 0x80000000
				MX6QDL_PAD_EIM_EB3__GPIO2_IO31   0x80000000
				MX6QDL_PAD_EIM_D16__GPIO3_IO16   0x80000000
				MX6QDL_PAD_EIM_DA9__GPIO3_IO09   0x80000000
				MX6QDL_PAD_SD3_RST__GPIO7_IO08   0x80000000		/* headphone detect */
				MX6QDL_PAD_GPIO_9__GPIO1_IO09    0x80000000		/* microphone detect */
				MX6QDL_PAD_GPIO_1__WDOG2_B       0x80000000
				MX6QDL_PAD_GPIO_2__GPIO1_IO02    0x80000000
				MX6QDL_PAD_ENET_TX_EN__GPIO1_IO28  0x1b0b0		/* ethernet IRQ */
				MX6QDL_PAD_ENET_CRS_DV__GPIO1_IO25 0x1b0b0		/* phy reset 0x80000000=ok  0x1b0b0=ok */

				MX6QDL_PAD_NANDF_D4__GPIO2_IO04   0x1b0b1       /* uart3_485 */
				MX6QDL_PAD_NANDF_D5__GPIO2_IO05   0x1b0b1       /* uart3_on */
				MX6QDL_PAD_NANDF_D6__GPIO2_IO06   0x1b0b1       /* V1:  uart3_ren  485 */
																/* V2:  uart3_hafu   low=fulldupex */ 
				MX6QDL_PAD_NANDF_D7__GPIO2_IO07   0x1b0b1       /* V1: uart3_den  485 */
																/* V2: uart3_term */
				MX6QDL_PAD_DISP0_DAT3__GPIO4_IO24 0x1b0b1		/*CS0 SPI3 Flash */

				MX6QDL_PAD_EIM_D19__GPIO3_IO19   0x80000000		/*pcie PowerON  1=on maxle neu 28.10.14*/
				MX6QDL_PAD_GPIO_17__GPIO7_IO12   0x80000000		/*pcie Reset 0=reset */
				MX6QDL_PAD_KEY_COL4__GPIO4_IO14  0x80000000		/*pcie Disable  0=disable */
				MX6QDL_PAD_EIM_D21__USB_OTG_OC   0x80000000		/* OTG Overcurrent */
			>;
		};

		pinctrl_audmux: audmuxgrp {	//audmux-2 ok
			fsl,pins = <
				MX6QDL_PAD_CSI0_DAT7__AUD3_RXD		0x130b0
				MX6QDL_PAD_CSI0_DAT4__AUD3_TXC		0x130b0
				MX6QDL_PAD_CSI0_DAT5__AUD3_TXD		0x110b0
				MX6QDL_PAD_CSI0_DAT6__AUD3_TXFS		0x130b0
			>;
		};

		pinctrl_ecspi1: ecspi1grp {	//ecspi1grp-2 ok
			fsl,pins = <
				MX6QDL_PAD_KEY_COL1__ECSPI1_MISO	0x100b1
				MX6QDL_PAD_KEY_ROW0__ECSPI1_MOSI	0x100b1
				MX6QDL_PAD_KEY_COL0__ECSPI1_SCLK	0x100b1
			>;
		};

		pinctrl_ecspi3: ecspi3grp-1 {	//ecspi1grp-1 ok
			fsl,pins = <
				MX6QDL_PAD_DISP0_DAT2__ECSPI3_MISO	0x100b1
				MX6QDL_PAD_DISP0_DAT1__ECSPI3_MOSI	0x100b1
				MX6QDL_PAD_DISP0_DAT0__ECSPI3_SCLK	0x100b1
			>;
		};

		pinctrl_enet: enetgrp {
			fsl,pins = <
				MX6QDL_PAD_ENET_MDIO__ENET_MDIO		0x1b0b0
				MX6QDL_PAD_ENET_MDC__ENET_MDC		0x1b0b0
				MX6QDL_PAD_RGMII_TXC__RGMII_TXC		0x1b0b0
				MX6QDL_PAD_RGMII_TD0__RGMII_TD0		0x1b0b0
				MX6QDL_PAD_RGMII_TD1__RGMII_TD1		0x1b0b0
				MX6QDL_PAD_RGMII_TD2__RGMII_TD2		0x1b0b0
				MX6QDL_PAD_RGMII_TD3__RGMII_TD3		0x1b0b0
				MX6QDL_PAD_RGMII_TX_CTL__RGMII_TX_CTL	0x1b0b0
				MX6QDL_PAD_ENET_REF_CLK__ENET_TX_CLK	0x1b0b0
				MX6QDL_PAD_RGMII_RXC__RGMII_RXC		0x1b0b0
				MX6QDL_PAD_RGMII_RD0__RGMII_RD0		0x1b0b0
				MX6QDL_PAD_RGMII_RD1__RGMII_RD1		0x1b0b0
				MX6QDL_PAD_RGMII_RD2__RGMII_RD2		0x1b0b0
				MX6QDL_PAD_RGMII_RD3__RGMII_RD3		0x1b0b0
				MX6QDL_PAD_RGMII_RX_CTL__RGMII_RX_CTL	0x1b0b0
// 				MX6QDL_PAD_GPIO_16__ENET_REF_CLK	0x4001b0a8
				MX6QDL_PAD_GPIO_16__ENET_REF_CLK	0xc0000000 //maxle test ???
			>;
		};

		pinctrl_gpio_keys: gpio_keysgrp {
			fsl,pins = <
				MX6QDL_PAD_EIM_D29__GPIO3_IO29 0x80000000
				MX6QDL_PAD_GPIO_4__GPIO1_IO04  0x80000000
				MX6QDL_PAD_GPIO_5__GPIO1_IO05  0x80000000
			>;
		};

/* 
		pinctrl_hdmi_cec: hdmicecgrp {
			fsl,pins = <
				MX6QDL_PAD_KEY_ROW2__HDMI_TX_CEC_LINE 0x1f8b0
			>;
		};
*/

		pinctrl_i2c1: i2c1grp {
			fsl,pins = <	//maxle _2
				MX6QDL_PAD_CSI0_DAT8__I2C1_SDA 0x4001b8b1
				MX6QDL_PAD_CSI0_DAT9__I2C1_SCL 0x4001b8b1
			>;
		};

		pinctrl_i2c2: i2c2grp {
			fsl,pins = <	//maxle _2
				MX6QDL_PAD_KEY_COL3__I2C2_SCL 0x4001b8b1
				MX6QDL_PAD_KEY_ROW3__I2C2_SDA 0x4001b8b1
			>;

		};

		pinctrl_i2c3: i2c3grp {
			fsl,pins = <
				MX6QDL_PAD_GPIO_3__I2C3_SCL		0x4001b8b1
				MX6QDL_PAD_GPIO_6__I2C3_SDA		0x4001b8b1
			>;
		};

		pinctrl_ipu1: ipu1grp {
			fsl,pins = <
				MX6QDL_PAD_DI0_DISP_CLK__IPU1_DI0_DISP_CLK 0x10
				MX6QDL_PAD_DI0_PIN15__IPU1_DI0_PIN15       0x10
				MX6QDL_PAD_DI0_PIN2__IPU1_DI0_PIN02        0x10
				MX6QDL_PAD_DI0_PIN3__IPU1_DI0_PIN03        0x10
				MX6QDL_PAD_DI0_PIN4__IPU1_DI0_PIN04        0x80000000
				MX6QDL_PAD_DISP0_DAT0__IPU1_DISP0_DATA00   0x10
				MX6QDL_PAD_DISP0_DAT1__IPU1_DISP0_DATA01   0x10
				MX6QDL_PAD_DISP0_DAT2__IPU1_DISP0_DATA02   0x10
				MX6QDL_PAD_DISP0_DAT3__IPU1_DISP0_DATA03   0x10
				MX6QDL_PAD_DISP0_DAT4__IPU1_DISP0_DATA04   0x10
				MX6QDL_PAD_DISP0_DAT5__IPU1_DISP0_DATA05   0x10
				MX6QDL_PAD_DISP0_DAT6__IPU1_DISP0_DATA06   0x10
				MX6QDL_PAD_DISP0_DAT7__IPU1_DISP0_DATA07   0x10
				MX6QDL_PAD_DISP0_DAT8__IPU1_DISP0_DATA08   0x10
				MX6QDL_PAD_DISP0_DAT9__IPU1_DISP0_DATA09   0x10
				MX6QDL_PAD_DISP0_DAT10__IPU1_DISP0_DATA10  0x10
				MX6QDL_PAD_DISP0_DAT11__IPU1_DISP0_DATA11  0x10
				MX6QDL_PAD_DISP0_DAT12__IPU1_DISP0_DATA12  0x10
				MX6QDL_PAD_DISP0_DAT13__IPU1_DISP0_DATA13  0x10
				MX6QDL_PAD_DISP0_DAT14__IPU1_DISP0_DATA14  0x10
				MX6QDL_PAD_DISP0_DAT15__IPU1_DISP0_DATA15  0x10
				MX6QDL_PAD_DISP0_DAT16__IPU1_DISP0_DATA16  0x10
				MX6QDL_PAD_DISP0_DAT17__IPU1_DISP0_DATA17  0x10
				MX6QDL_PAD_DISP0_DAT18__IPU1_DISP0_DATA18  0x10
				MX6QDL_PAD_DISP0_DAT19__IPU1_DISP0_DATA19  0x10
				MX6QDL_PAD_DISP0_DAT20__IPU1_DISP0_DATA20  0x10
				MX6QDL_PAD_DISP0_DAT21__IPU1_DISP0_DATA21  0x10
				MX6QDL_PAD_DISP0_DAT22__IPU1_DISP0_DATA22  0x10
				MX6QDL_PAD_DISP0_DAT23__IPU1_DISP0_DATA23  0x10
			>;
		};

		pinctrl_ipu1_2: ipu1grp-2 { /* parallel camera */
			fsl,pins = <
				MX6QDL_PAD_CSI0_DAT12__IPU1_CSI0_DATA12    0x80000000
				MX6QDL_PAD_CSI0_DAT13__IPU1_CSI0_DATA13    0x80000000
				MX6QDL_PAD_CSI0_DAT14__IPU1_CSI0_DATA14    0x80000000
				MX6QDL_PAD_CSI0_DAT15__IPU1_CSI0_DATA15    0x80000000
				MX6QDL_PAD_CSI0_DAT16__IPU1_CSI0_DATA16    0x80000000
				MX6QDL_PAD_CSI0_DAT17__IPU1_CSI0_DATA17    0x80000000
				MX6QDL_PAD_CSI0_DAT18__IPU1_CSI0_DATA18    0x80000000
				MX6QDL_PAD_CSI0_DAT19__IPU1_CSI0_DATA19    0x80000000
				MX6QDL_PAD_CSI0_DATA_EN__IPU1_CSI0_DATA_EN 0x80000000
				MX6QDL_PAD_CSI0_PIXCLK__IPU1_CSI0_PIXCLK   0x80000000
				MX6QDL_PAD_CSI0_MCLK__IPU1_CSI0_HSYNC      0x80000000
				MX6QDL_PAD_CSI0_VSYNC__IPU1_CSI0_VSYNC     0x80000000
			>;
		};

		pinctrl_pwm1: pwm1grp {
			fsl,pins = <
				MX6QDL_PAD_SD1_DAT3__PWM1_OUT		0x1b0b1
			>;
		};

		pinctrl_uart1: uart1grp {
			fsl,pins = <
				MX6QDL_PAD_CSI0_DAT10__UART1_TX_DATA	0x1b0b1
				MX6QDL_PAD_CSI0_DAT11__UART1_RX_DATA	0x1b0b1
			>;
		};

		pinctrl_uart3: uart3grp {   /* added for maxle */
			fsl,pins = <
				MX6QDL_PAD_EIM_D25__UART3_RX_DATA 0x1b0b1
				MX6QDL_PAD_EIM_D24__UART3_TX_DATA 0x1b0b1
				MX6QDL_PAD_EIM_D30__UART3_CTS_B   0x1b0b1
				MX6QDL_PAD_EIM_D31__UART3_RTS_B   0x1b0b1
#if 0
				MX6QDL_PAD_NANDF_D4__GPIO2_IO04   0x1b0b1	/* uart3_485 */
				MX6QDL_PAD_NANDF_D5__GPIO2_IO05   0x1b0b1	/* uart3_on */
				MX6QDL_PAD_NANDF_D6__GPIO2_IO06   0x1b0b1	/* uart3_ren  485 */
				MX6QDL_PAD_NANDF_D7__GPIO2_IO07   0x1b0b1	/* uart3_den  485 */
#endif
			>;
		};

		pinctrl_uart4: uart4grp {		/* maxle added */
			fsl,pins = <
				MX6QDL_PAD_CSI0_DAT12__UART4_TX_DATA 0x1b0b1
				MX6QDL_PAD_CSI0_DAT13__UART4_RX_DATA 0x1b0b1
				MX6QDL_PAD_CSI0_DAT16__UART4_RTS_B   0x1b0b1
				MX6QDL_PAD_CSI0_DAT17__UART4_CTS_B   0x1b0b1
			>;
		};
			
		pinctrl_uart5: uart5grp {
			fsl,pins = <
				MX6QDL_PAD_CSI0_DAT14__UART5_TX_DATA 0x1b0b1
				MX6QDL_PAD_CSI0_DAT15__UART5_RX_DATA 0x1b0b1
			>;
		};

		pinctrl_flexcan1: flexcan1grp {
			fsl,pins = <
				MX6QDL_PAD_GPIO_7__FLEXCAN1_TX   0x80000000
				MX6QDL_PAD_GPIO_8__FLEXCAN1_RX   0x80000000
			>;
		};

		pinctrl_flexcan2: flexcan2grp-1 {
			fsl,pins = <
				MX6QDL_PAD_KEY_COL4__FLEXCAN2_TX 0x80000000
				MX6QDL_PAD_KEY_ROW4__FLEXCAN2_RX 0x80000000
			>;
		};

		pinctrl_usbotg: usbotggrp { 
			fsl,pins = <
				MX6QDL_PAD_ENET_RX_ER__USB_OTG_ID	0x17059
			>;
		};

		pinctrl_usdhc2: usdhc2grp {
			fsl,pins = <
				MX6QDL_PAD_SD2_CMD__SD2_CMD		0x17059
				MX6QDL_PAD_SD2_CLK__SD2_CLK		0x10059
				MX6QDL_PAD_SD2_DAT0__SD2_DATA0		0x17059
				MX6QDL_PAD_SD2_DAT1__SD2_DATA1		0x17059
				MX6QDL_PAD_SD2_DAT2__SD2_DATA2		0x17059
				MX6QDL_PAD_SD2_DAT3__SD2_DATA3		0x17059
/* maxle: has a 4-Bit Interface only, so don't use DATA4-DATA7 
				MX6QDL_PAD_NANDF_D4__SD2_DATA4		0x17059
				MX6QDL_PAD_NANDF_D5__SD2_DATA5		0x17059
				MX6QDL_PAD_NANDF_D6__SD2_DATA6		0x17059
				MX6QDL_PAD_NANDF_D7__SD2_DATA7		0x17059
*/
			>;
		};

		pinctrl_usdhc3: usdhc3grp {
			fsl,pins = <
				MX6QDL_PAD_SD3_CMD__SD3_CMD		0x17059
				MX6QDL_PAD_SD3_CLK__SD3_CLK		0x10059
				MX6QDL_PAD_SD3_DAT0__SD3_DATA0		0x17059
				MX6QDL_PAD_SD3_DAT1__SD3_DATA1		0x17059
				MX6QDL_PAD_SD3_DAT2__SD3_DATA2		0x17059
				MX6QDL_PAD_SD3_DAT3__SD3_DATA3		0x17059
				MX6QDL_PAD_SD3_DAT4__SD3_DATA4		0x17059
				MX6QDL_PAD_SD3_DAT5__SD3_DATA5		0x17059
				MX6QDL_PAD_SD3_DAT6__SD3_DATA6		0x17059
				MX6QDL_PAD_SD3_DAT7__SD3_DATA7		0x17059
			>;
		};

		pinctrl_usdhc4: usdhc4grp {
			fsl,pins = <
				MX6QDL_PAD_SD4_CMD__SD4_CMD		0x17059
				MX6QDL_PAD_SD4_CLK__SD4_CLK		0x10059
				MX6QDL_PAD_SD4_DAT0__SD4_DATA0		0x17059
				MX6QDL_PAD_SD4_DAT1__SD4_DATA1		0x17059
				MX6QDL_PAD_SD4_DAT2__SD4_DATA2		0x17059
				MX6QDL_PAD_SD4_DAT3__SD4_DATA3		0x17059
				MX6QDL_PAD_SD4_DAT4__SD4_DATA4		0x17059
				MX6QDL_PAD_SD4_DAT5__SD4_DATA5		0x17059
				MX6QDL_PAD_SD4_DAT6__SD4_DATA6		0x17059
				MX6QDL_PAD_SD4_DAT7__SD4_DATA7		0x17059
			>;
		};

	};
};

&dcic1 {
	dcic_id = <0>;
	dcic_mux = "dcic-hdmi";
	status = "okay";
};

&dcic2 {
	dcic_id = <1>;
	dcic_mux = "dcic-lvds1";
	status = "okay";
};

&gpc {
	/* use ldo-bypass, u-boot will check it and configure */
	fsl,ldo-bypass = <1>;
	fsl,wdog-reset = <2>;
};

&hdmi_audio {
	status = "okay";
};

/*
&hdmi_cec {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_hdmi_cec>;
	status = "okay";
};
*/

&hdmi_core {
	ipu_id = <0>;
	disp_id = <0>;
	status = "okay";
};

&hdmi_video {
	fsl,phy_reg_vlev = <0x0294>;
	fsl,phy_reg_cksymtx = <0x800d>;
	status = "okay";
};

&ldb {
	status = "okay";

#ifdef USE_SPLIT_MODE
	split-mode;		/* for dual channel displays */
#endif
#ifdef USE_DUAL_MODE
	dual-mode;		/* same screen on two displays */
#endif

	lvds-channel@0 {
		fsl,data-mapping = "spwg";
		fsl,data-width = <24>;
		status = "okay";
#if defined(USE_SPLIT_MODE) || defined(USE_DUAL_MODE)
		primary;
#else
#endif
		display-timings {
			native-mode = <&tim0_5>;

			tim0_0: evervision_vga {		 // 640x480
				clock-frequency = <42000000>; 
// 				clock-frequency = <25176000>; 
				hactive = <640>; 
				vactive = <480>; 
				hback-porch = <144>; 
				hfront-porch = <50>; 
				vback-porch = <33>; 
				vfront-porch = <10>; 
				hsync-len = <96>; 
				vsync-len = <3>; 
			}; 

			tim0_1: evervision_wvga {	 	// 800x480
				clock-frequency = <38000000>; // 34=minimum 
				hactive = <800>; 
				vactive = <480>;   
				hback-porch = <56>;
				hfront-porch = <50>; 
				vback-porch = <20>; 
				vfront-porch = <53>; 
				hsync-len = <180>; 
				vsync-len = <30>;
			}; 

			tim0_2: SVGA {				 	// 800x600
				clock-frequency = <41230000>; 
				hactive = <800>; 
				vactive = <600>; 
				hback-porch = <200>; 
				hfront-porch = <56>; 
				vback-porch = <20>; 
				vfront-porch = <8>; 
				hsync-len = <5>; 
				vsync-len = <5>; 
			};

			tim0_3: hsd100pxn1 { 			// 1024x600
 				clock-frequency = <52000000>; 
 				hactive = <1024>; 
 				vactive = <600>; 
 				hback-porch = <220>; 
 				hfront-porch = <40>; 
 				vback-porch = <7>; 
 				vfront-porch = <21>; 
 				hsync-len = <60>; 
 				vsync-len = <10>; 
 			}; 

			tim0_4: XGA	{				 	// 1024x768
//				clock-frequency = <52000000>; //???? adjust it!
				hactive = <1024>; 
				vactive = <768>; 
				hback-porch = <220>; 
				hfront-porch = <40>; 
				vback-porch = <7>; 
				vfront-porch = <21>; 
				hsync-len = <60>; 
				vsync-len = <10>; 
			}; 

			tim0_5: lp101wx1 {				// 1280x800
 				clock-frequency = <71000000>;  
 				hactive = <1280>; 
 				vactive = <800>; 
 				hback-porch = <48>; 
 				hfront-porch = <80>; 
 				vback-porch = <15>; 
 				vfront-porch = <2>; 
 				hsync-len = <32>; 
 				vsync-len = <6>; 
 			};
 			 
 			tim0_6: SXGA { 					// 1280x1024
 				clock-frequency = <72000000>; 
 				hactive = <1280>; 
 				vactive = <1024>;   
 				hback-porch = <48>; 
 				hfront-porch = <80>; 
 				vback-porch = <15>; 
 				vfront-porch = <2>; 
 				hsync-len = <32>; 
 				vsync-len = <6>; 
 			};

			tim0_7: Innolux_G185BGE_L01 {	 // 1366x768
				clock-frequency = <76000000>; 
				hactive = <1366>; 
				vactive = <768>; 
				hback-porch = <48>; 
				hfront-porch = <80>; 
				vback-porch = <15>; 
				vfront-porch = <2>; 
				hsync-len = <32>; 
				vsync-len = <6>; 
			};

			tim0_8: HD1920 { 				// 1920x1080
				clock-frequency = <130000000>;  
				hactive = <1920>; 
				vactive = <1080>;   
				hback-porch = <100>; 
				hfront-porch = <40>; 
				vback-porch = <30>; 
				vfront-porch = <3>; 
				hsync-len = <10>; 
				vsync-len = <2>; 
			};
		};
	};

#if defined(USE_SPLIT_MODE) || defined(USE_DUAL_MODE)
  /* in split-mode or dual-mode do not define lvds-channel@1 */
#else

	lvds-channel@1 {
		fsl,data-mapping = "spwg";
		fsl,data-width = <24>; 
		primary;
		status = "okay";

		display-timings {
			native-mode = <&tim1_5>; 

			tim1_0: evervision_vga {		 // 640x480
				clock-frequency = <42000000>; 
// 				clock-frequency = <25176000>; 
				hactive = <640>; 
				vactive = <480>; 
				hback-porch = <144>; 
				hfront-porch = <50>; 
				vback-porch = <33>; 
				vfront-porch = <10>; 
				hsync-len = <96>; 
				vsync-len = <3>; 
			}; 

			tim1_1: evervision_wvga {		 // 800x480
				clock-frequency = <38000000>; // 34=minimum 
				hactive = <800>; 
				vactive = <480>;   
				hback-porch = <56>;
				hfront-porch = <50>; 
				vback-porch = <20>; 
				vfront-porch = <53>; 
				hsync-len = <180>; 
				vsync-len = <30>;
			}; 

			tim1_2: SVGA {					 // 800x600
				clock-frequency = <41230000>; 
				hactive = <800>; 
				vactive = <600>; 
				hback-porch = <200>; 
				hfront-porch = <56>; 
				vback-porch = <20>; 
				vfront-porch = <8>; 
				hsync-len = <5>; 
				vsync-len = <5>; 
			};

			tim1_3: hsd100pxn1 { 			// 1024x600
 				clock-frequency = <52000000>; 
 				hactive = <1024>; 
 				vactive = <600>; 
 				hback-porch = <220>; 
 				hfront-porch = <40>; 
 				vback-porch = <7>; 
 				vfront-porch = <21>; 
 				hsync-len = <60>; 
 				vsync-len = <10>; 
 			}; 

			tim1_4: XGA	{		 			// 1024x768
				clock-frequency = <52000000>; //???? adjust it!
				hactive = <1024>; 
				vactive = <768>; 
				hback-porch = <220>; 
				hfront-porch = <40>; 
				vback-porch = <7>; 
				vfront-porch = <21>; 
				hsync-len = <60>; 
				vsync-len = <10>; 
			}; 

			tim1_5: lp101wx1 {				// 1280x800
 				clock-frequency = <71000000>;  
 				hactive = <1280>; 
 				vactive = <800>; 
 				hback-porch = <48>; 
 				hfront-porch = <80>; 
 				vback-porch = <15>; 
 				vfront-porch = <2>; 
 				hsync-len = <32>; 
 				vsync-len = <6>; 
 			};
 			 
 			tim1_6: SXGA {					// 1280x1024
 				clock-frequency = <72000000>; 
 				hactive = <1280>; 
 				vactive = <1024>;   
 				hback-porch = <48>; 
 				hfront-porch = <80>; 
 				vback-porch = <15>; 
 				vfront-porch = <2>; 
 				hsync-len = <32>; 
 				vsync-len = <6>; 
 			};

			tim1_7: Innolux_G185BGE_L01 {	// 1366x768
				clock-frequency = <76000000>; 
				hactive = <1366>; 
				vactive = <768>; 
				hback-porch = <48>; 
				hfront-porch = <80>; 
				vback-porch = <15>; 
				vfront-porch = <2>; 
				hsync-len = <32>; 
				vsync-len = <6>; 
			};

			tim1_8: HD1920 {				// 1920x1080
				clock-frequency = <130000000>;  
				hactive = <1920>; 
				vactive = <1080>;   
				hback-porch = <100>; 
				hfront-porch = <40>; 
				vback-porch = <30>; 
				vfront-porch = <3>; 
				hsync-len = <10>; 
				vsync-len = <2>; 
			};
		};
	};
#endif
};

&pcie {
	power-on-gpio = <&gpio3 19 0>;
	reset-gpio = <&gpio7 12 0>;
	status = "okay";
};

&pwm1 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_pwm1>;
	status = "okay";
};

&ssi2 {
	fsl,mode = "i2s-slave";
	status = "okay";
};

&uart1 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart1>;
	status = "okay";
};

#if 0
/*  Handshake-Test via "stest" works with
    or without setting 'fsl,uart-has-rtscts;'
*/
&uart3 {
	/* normal rs232 UART */
	//compatible = "fsl,imx6q-uart", "fsl,imx21-uart";  set this??
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart3>;
/*	fsl,uart-has-rtscts; */
	uart3-on = <&gpio2 5 GPIO_ACTIVE_LOW>;
	status = "okay";
};
#else
&uart3 {                           
	/* set compatible to xx-rs485 here, if you want to use
	   the "imx_rs485.c" (testing) driver for maxle
	 */
	compatible = "fsl,imx6q-uart-rs485", "fsl,imx21-uart-rs485";
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart3>;
	//fsl,uart-has-rtscts;			// maxle! Check it
	uart3-485 = <&gpio2 4 GPIO_ACTIVE_LOW>;
	uart3-on = <&gpio2 5 GPIO_ACTIVE_LOW>;
	uart3-hafu = <&gpio2 6 GPIO_ACTIVE_HIGH>;
	uart3-term = <&gpio2 7 GPIO_ACTIVE_HIGH>;
	status = "okay";
};
#endif

&uart4 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart4>;
	status = "okay";
};

&uart5 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart5>;
	status = "okay";
};

&flexcan1 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_flexcan1>;   /* maxle pins flexcan1_3 */
#if 0
	pinctrl-assert-gpios = <&max7310_b 3 GPIO_ACTIVE_HIGH>; /* TX */
	trx-en-gpio = <&max7310_b 6 GPIO_ACTIVE_HIGH>;
	trx-stby-gpio = <&max7310_b 5 GPIO_ACTIVE_HIGH>;
#endif
	status = "disabled"; /* bei sabreauto pin conflict with fec */
};

&usbh1 {
	vbus-supply = <&reg_usb_h1_vbus>;
	status = "okay";
};

&usbotg {
	vbus-supply = <&reg_usb_otg_vbus>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_usbotg>;
	disable-over-current;
	status = "okay";
};

&usdhc2 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_usdhc2>;	// maxle: 4-Bit Interface
	bus-width = <8>;		// maxle: org was 8
	cd-gpios = <&gpio2 2 0>;
	wp-gpios = <&gpio2 3 0>;
	no-1-8-v;
	keep-power-in-suspend;
	enable-sdio-wakeup;
	status = "okay";
};

&usdhc3 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_usdhc3>;
	bus-width = <8>;
	cd-gpios = <&gpio2 0 0>;
	wp-gpios = <&gpio2 1 0>;
	no-1-8-v;
	keep-power-in-suspend;
	enable-sdio-wakeup;
	status = "okay";
};

&usdhc4 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_usdhc4>;
	bus-width = <8>;
	non-removable;
	no-1-8-v;
	keep-power-in-suspend;
	status = "disabled";      // maxle
};

&wdog1 {
	status = "disabled";
};

&wdog2 {
	status = "okay";
};
